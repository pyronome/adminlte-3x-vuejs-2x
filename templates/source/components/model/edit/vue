<template>
    <div class="content-wrapper">
        <section class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                    <div class="col-sm-6">
                        <h1>{{ $t("{{$ __value__}} Edit") }}</h1>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><router-link :to="'/' + main_folder + '/home'">{{ $t('Home') }}</router-link></li>
                            <li class="breadcrumb-item"><router-link :to="'/' + main_folder + '/{{$ __value__/__lowercase_text__}}'">{{ $t("{{$ __value__}} List") }}</router-link></li>
                            <li class="breadcrumb-item active">{{ $t("{{$ __value__}} Edit") }}</li>
                        </ol>
                    </div>
                </div>
            </div>
        </section>
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-xs-12">
						<form id="{{$ __value__}}Form"
                            class=""
                            @submit.prevent="submitForm"
                            @keydown="{{$ __value__}}Form.onKeydown($event)">
                            <div class="card">
                                <div class="card-header show_by_permission_must_update">
                                    <div class="card-tools">
        								<router-link tag="a"
        									class="btn btn-danger btn-xs btn-on-table float-right"
        									:to="backbuttonURL">
        									<i class="fas fa-times" aria-hidden="true"></i> <span>{{ $t('Cancel') }}</span>
        								</router-link>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <input type="hidden" v-model="{{$ __value__}}Form.id" id="id" name="id">
                                    <div class="row">{{MODEL{{$ ../__item_index__/__value__}}_EDIT_COMPONENT_INPUTS}}
                                    </div>
                                </div>
                                <div class="card-footer show_by_permission_must_update">
                                    <div class="col-lg-12 col-md-12 col-xs-12">
                                        <button :disabled="{{$ __value__}}Form.busy"
    										type="submit"
                                            class="btn btn-success btn-xs btn-on-table float-right">
                                            <i class="far fa-save" aria-hidden="true"></i> {{ $t('Save') }}
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </section>
        <input type="hidden" id="controller" value="{{$ __value__/__lowercase_text__}}">
		<dropzone upload-url="/api/media/post" style="display:none;"></dropzone>
        <page-variables :has_widgets="false"></page-variables>
    </div>
</template>

<script>

export default {
    data() {
        return {
            main_folder: '',
            id: 0,{{MODEL{{$ ../__item_index__/__value__}}_OPTION_DEFINITONS}},{{MODEL{{$ ../__item_index__/__value__}}_FILES_DEFINITON}}
			{{$ __value__}}Form: new Form({
                'debug_mode': false,
                'id': this.id{{MODEL{{$ ../__item_index__/__value__}}_EDIT_COMPONENT_FORM_PROPERTIES}}
            }),
            page: {
                is_ready: false,
                is_data_loading: false,
                is_data_loaded: false,
                external_files: [
                    ("/js/" + AdminLTEHelper.getURL('/bootstrap-switch/js/bootstrap-switch.js'))
                ],
            }
        };
    },
    computed: {
        backbuttonURL() {
            let URL = '/' + this.main_folder + '/product';
            if (this.id > 0) {
                URL = URL + '/detail/' + this.id;
            }
            return URL;
        }
    },
    methods: {
        processLoadQueue: function () {
            if (!this.page.is_data_loaded
{{MODEL{{$ ../__item_index__/__value__}}_ALL_LOADED_CONTROLS}}
				&& !this.page.is_files_loaded) {
                this.$Progress.start();
            }
			
{{MODEL{{$ ../__item_index__/__value__}}_SINGLE_LOADED_CONTROLS}}
			
			if (!this.page.is_files_loaded) {
                this.load_files();
            }

 			if (this.page.is_data_loaded) {
				this.$nextTick(function () {
                    this.initializePage();
                });

				this.$Progress.finish();
				this.page.is_ready = true;
			} else {
				this.loadData();
			}
        },
{{MODEL{{$ ../__item_index__/__value__}}_OPTION_LOAD_METHODS}}
		load_files: function () {
            if (this.page.is_files_loading) {
                return;
            }

            this.page.is_files_loading = true;

            axios.get(AdminLTEHelper.getAPIURL("{{$ __value__/__lowercase_text__}}/get_files/" + this.id))
                .then(({ data }) => {
                    this.page.is_files_loaded = true;
                    this.page.is_files_loading = false;
                    this.files = data.list;
                    this.processLoadQueue();
                }).catch(({ data }) => {
                    this.page.is_files_loaded = true;
                    this.page.is_files_loading = false;
                    this.$Progress.fail();
                    this.processLoadQueue();
                });
        },
        loadData: function () {
            if (this.page.is_data_loading) {
                return;
            }

            this.page.is_data_loading = true;

            axios.get(AdminLTEHelper.getAPIURL("{{$ __value__/__lowercase_text__}}/get/" + this.id))
                .then(({ data }) => {
                    this.page.is_data_loaded = true;
                    this.page.is_data_loading = false;
                    if (this.id > 0) {
                        this.{{$ __value__}}Form.fill(data.list[0]);
                    }
                    this.processLoadQueue();
                }).catch(({ data }) => {
                    this.page.is_data_loaded = true;
                    this.page.is_data_loading = false;
                    this.$Progress.fail();
                    this.processLoadQueue();
                });
        },
		initializePage: function () {
            AdminLTEHelper.initializeTextEditor();
                    
            var locationInputs = this.$el.querySelectorAll(".vue-location");
            locationInputs.forEach(locationInput => {
                AdminLTEHelper.updateLocationPicker(locationInput);
            });

            var switchInputs = this.$el.querySelectorAll(".vue-switch");
            switchInputs.forEach(switchInput => {
                AdminLTEHelper.updateSwitch(switchInput);
            });

			AdminLTEHelper.initializePageFiles(this.files);
		},
        submitForm: function () {
            // Submit the form via a POST request
            this.$Progress.start();
            this.{{$ __value__}}Form.post(AdminLTEHelper.getAPIURL("{{$ __value__/__lowercase_text__}}/post"))
                .then(({ data }) => {
                    this.$Progress.finish();
                    this.$router.push('/adminlte/{{$ __value__/__lowercase_text__}}/detail/' + data.id);
                }).catch(({ data }) => {
                    this.$Progress.fail();
                });
        }
    },
    mounted() {
        this.main_folder = AdminLTEHelper.getMainFolder();
        this.id = parseInt(this.$route.params.id);    
        this.page.is_ready = false;
        AdminLTEHelper.loadExternalFiles(this.page.external_files, this.processLoadQueue());
    }
}
</script>